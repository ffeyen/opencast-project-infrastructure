---
# vim: et:ts=2:sw=2:sts=2

- hosts: server

  vars:
    admins:
      - lars
      - greglogan
    bots:
      - buildbot

  tasks:
    - name: install epel (rh)
      become: true
      package:
        state: present
        name: epel-release
      when: >
        ansible_os_family == 'RedHat'

    - name: install base tools
      become: true
      package:
        state: latest
        name:
          - git
          - htop
          - nload
          - vim
          - zsh

    - name: ensure group wheel exists
      group:
        name: wheel
        state: present

    - name: create opencast admin infra users
      become: true
      user:
        name: '{{ item }}'
        groups: wheel
        append: true
      loop: '{{ admins }}'

    - name: create opencast bot infra users
      become: true
      user:
        name: "{{ item }}"
      loop: "{{ bots }}"
      when: "'qa' in group_names"

    - name: add vmusers groups to bots accounts on uos servers
      become: true
      user:
        name: '{{ item }}'
        groups: vmusers
        append: true
      loop: '{{ bots }}'
      when: "'uos' in group_names and 'qa' in group_names"

    - name: set up admin authorized keys
      become: true
      authorized_key:
        user: '{{ item }}'
        state: present
        key: "{{ lookup('file', 'pub-keys/{{ item }}.pub') }}"
        exclusive: true
      loop: '{{ admins }}'

    - name: set up bot authorized keys
      become: true
      authorized_key:
        user: "{{ item }}"
        state: present
        key: "{{ lookup('file', 'pub-keys/' ~ item ~ '-' ~ \
              inventory_hostname.split('.') | first ~ '.pub' ) }}"
        exclusive: true
      loop: "{{ bots }}"
      when: "'qa' in group_names"

    - name: remove old users
      become: true
      user:
        name: '{{ item }}'
        state: absent
        remove: true
      loop: "{{ remove_user | default([]) }}"
      when: item != ""

    - name: allow wheel to sudo without a password
      become: true
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^%wheel"
        line: "%wheel ALL=(ALL) NOPASSWD: ALL"


    # sshd options
    # do not disable password authentication on ETH servers (for reasonsâ€¦)
    - name: disable password authentication
      become: true
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication '
        line: 'PasswordAuthentication no'
      when: "'eth' not in group_names or 'ethz.ch' != ansible_domain"
      notify:
        - reload sshd


  handlers:
    - name: reload sshd
      become: true
      service:
        name: sshd
        state: reloaded
